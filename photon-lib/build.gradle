/*
 * Copyright 2017 LinkedIn Corp. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may obtain a
 * copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
apply plugin: 'scala'
apply from: '../build-scripts/integration-test.gradle'

// This property is set in defaultEnvironment.gradle
def modifier = avroMapReduceModifier

dependencies {
  compile("org.apache.spark:spark-core$scalaSuffix:$sparkVersion") {
    exclude group: 'org.apache.avro', module: 'avro-mapred'
  }
  compile("org.apache.spark:spark-mllib$scalaSuffix:$sparkVersion") {
    exclude group: 'org.apache.avro', module: 'avro-mapred'
  }
  compile('org.slf4j:slf4j-api:1.7.9')

  compile("org.apache.avro:avro-mapred:1.7.7$modifier" as String) {
    // We don't need to import netty, and including it can cause version conflicts in downstream projects
    exclude group: 'io.netty'
  }

  testCompile(project(":photon-test-utils$scalaSuffix"))
  testCompile("org.mockito:mockito-core:1.+")

  testRuntime("org.scalanlp:breeze$scalaSuffix:0.11.2")
}

task testsJar(type: Jar, dependsOn: testClasses) {
  classifier = 'test'
  from sourceSets.test.output
}

configurations {
  testOutput.extendsFrom(testCompile)
}

artifacts {
  testOutput testsJar
}

apply from: rootProject.file('release-bintray.gradle')
