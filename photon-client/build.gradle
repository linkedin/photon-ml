/*
 * Copyright 2017 LinkedIn Corp. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may obtain a
 * copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
apply plugin: 'scala'
apply from: '../build-scripts/integration-test.gradle'

dependencies {
  compile(project(':photon-avro-schemas'))
  compile(project(":photon-lib$scalaSuffix"))
  compile(project(":photon-api$scalaSuffix"))
  compile('joda-time:joda-time:2.7')
  // Stub warnings without this
  compile('org.joda:joda-convert:1.8.1')
  // This is Scala's option parsing library
  compile("com.github.scopt:scopt$scalaSuffix:3.5.0")

  testCompile(project(":photon-test-utils$scalaSuffix"))
  testCompile(project(path: ":photon-lib$scalaSuffix", configuration: 'testOutput'))
  testCompile(project(path: ":photon-api$scalaSuffix", configuration: 'testOutput'))
  testCompile('com.linkedin.paldb:paldb:1.1.0')
  testCompile("org.mockito:mockito-core:1.+")

  testRuntime("org.scalanlp:breeze$scalaSuffix:0.11.2")
  testRuntime("org.scalanlp:breeze-macros$scalaSuffix:0.11.2")
}

integTest {
  doLast {
    println("Cleaning up temporary files generated by the integration tests")
    // Remove files created by integTest in photon-client/
    file('.').listFiles().findAll { it.name.endsWith('_ALL') }.each { delete it }
  }
}

apply from: rootProject.file('release-bintray.gradle')
