/*
 * Copyright 2017 LinkedIn Corp. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may obtain a
 * copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
package com.linkedin.photon.ml.sampling

import org.testng.Assert._
import org.testng.annotations.{DataProvider, Test}

import com.linkedin.photon.ml.TaskType
import com.linkedin.photon.ml.TaskType.TaskType

/**
 * Unit tests for the [[DownSamplerHelper]]
 */
class DownSamplerHelperTest {

  import DownSamplerHelperTest._

  @DataProvider
  def invalidDownSamplingRatesProvider(): Array[Array[Any]] =
    Array(
      Array(TaskType.LOGISTIC_REGRESSION),
      Array(TaskType.LINEAR_REGRESSION),
      Array(TaskType.POISSON_REGRESSION))

  /**
   * Test that the [[DownSampler]] generated by the factory function returned by the [[DownSamplerHelper]] is of the
   * appropriate type for the given training task and has the right down-sampling rate.
   *
   * @param trainingTask The training task
   */
  @Test(dataProvider = "invalidDownSamplingRatesProvider")
  def testBuildFactory(trainingTask: TaskType): Unit = {

    val downSampler = DownSamplerHelper.buildFactory(trainingTask)(DOWN_SAMPLING_RATE)

    assertEquals(downSampler.downSamplingRate, DOWN_SAMPLING_RATE)

    trainingTask match {
      case TaskType.LINEAR_REGRESSION | TaskType.POISSON_REGRESSION =>
        assertTrue(downSampler.isInstanceOf[DefaultDownSampler])

      case TaskType.LOGISTIC_REGRESSION =>
        assertTrue(downSampler.isInstanceOf[BinaryClassificationDownSampler])
    }
  }
}

object DownSamplerHelperTest {

  val DOWN_SAMPLING_RATE = 0.75
}
