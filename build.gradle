apply plugin: 'li-product'
apply plugin: 'li-jacoco-product'
apply plugin: 'li-findbugs-product'

subprojects {
  configurations.all {
    // Brought in by azkaban2, but not needed
    exclude group: 'commons-dbutils'
    exclude group: 'commons-fileupload'
    exclude group: 'commons-pool'
    exclude group: 'com.h2database'
    exclude group: 'mysql'
    exclude group: 'com.google.collections', module: 'google-collections'
    exclude group: 'kafka', module: 'kafka'
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
      // Brought in by azkaban2
      if((details.requested.group == 'org.codehaus.jackson')) {
        details.useVersion '1.9.13'
      }
    }
  }

  plugins.withType(JavaPlugin) {
    test {
      useTestNG()

      afterSuite { desc, result ->
        if (!desc.parent) {
          println ":${project.name} -- Executed ${result.testCount} tests: ${result.successfulTestCount} succeeded, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped"
        }
      }

      systemProperty "log4j.configuration", "file:${project.rootDir}/log4j.properties"
    }
  }

  tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ["-feature", "-deprecation"]
    scalaCompileOptions.useAnt = false
    configure(scalaCompileOptions.forkOptions) {
      memoryMaximumSize = '1g'
    }
  }
}
