def jobDir = "conf/jobs"

// Have this script clean up the jobDir on ligradle clean.
clean {
  delete jobDir
}

def flowName = "game-on-ads-parameter-tuning-4-week-full-model-one-sharad"


// Spark parameters
def executorMemoryInMB = 8000
def executorMemory = "${executorMemoryInMB}m" as String
def executorMemoryOverhead = executorMemoryInMB / 4
def numExecutors = 150
def driverMemoryInMB = 8000
def driverMemory = "${driverMemoryInMB}m" as String
def maxResultSize = "${driverMemoryInMB/2}m" as String
def parallelism = numExecutors * 4


// Game input data parameters
def numWeeks = 4
def trainInputDirs = "/jobs/fastrain/glmix_data/SCINAdvertiserCampaignMember/$numWeeks-week/train" as String
def validateInputDirs = "/jobs/fastrain/glmix_data/SCINAdvertiserCampaignMember/$numWeeks-week/test" as String
def outputDir = "/jobs/fastrain/glmix_results/SCINAdvertiserCampaignMember/$numWeeks-week/$flowName" as String

def featureNameAndTermSetInputPath = "/jobs/fastrain/glmix_data/SCINAdvertiserCampaignMember/$numWeeks-week/feature-lists" as String


// Game data configuration parameters
def featureShardIdToFeatureSectionKeysMap = "shard1:globalFeatures,itemFeatures"
def numPartitionsForFixedEffectDataSet = numExecutors * 16
def fixedEffectDataConfigurations = "global:shard1,$numPartitionsForFixedEffectDataSet" as String
def numPartitionsForRandomEffectDataSet = numExecutors * 4
def randomEffectDataConfigurations =
    "per-advertiser:advertiser_id,shard1,$numPartitionsForRandomEffectDataSet,-1,0,-1,index_map|" +
    "per-creative:creative_id,shard1,$numPartitionsForRandomEffectDataSet,-1,0,-1,index_map" as String
def minPartitionsForValidation = numExecutors * 8

// Game optimization parameters
def updatingSequence = "global,per-advertiser,per-creative"
def numIterations = 5
def fixedEffectOptimizationConfigurations = "global:15,1e-5,10,1,tron,l2"


// For hyper-parameter grid search

def perAdRandomEffectRegularizationWeights = [30, 50, 100, 150]
def perAdvertiserRandomEffectRegularizationWeights = [30, 50, 100, 150]

hadoop {
  buildPath jobDir

  workflow(flowName) {

    for (perAdRandomEffectRegularizationWeight in perAdRandomEffectRegularizationWeights) {
      for (perAdvertiserRandomEffectRegularizationWeight in perAdvertiserRandomEffectRegularizationWeights) {

        if (perAdvertiserRandomEffectRegularizationWeight < perAdRandomEffectRegularizationWeight) continue

        def randomEffectOptimizationConfigurations = "per-advertiser:20,1e-5,$perAdvertiserRandomEffectRegularizationWeight,1,tron,l2|" +
            "per-creative:20,1e-5,$perAdRandomEffectRegularizationWeight,1,tron,l2" as String

        def applicationName = "ad-eff-$perAdRandomEffectRegularizationWeight-advertiser-eff-$perAdvertiserRandomEffectRegularizationWeight".
            replaceAll("\\.|_|,", "-") as String

        job(applicationName) {

          def jobOutputDir = "$outputDir/$applicationName" as String

          baseProperties 'sparkCommon'
          set properties: ['class'                                  : 'com.linkedin.photon.ml.avro.training.Driver',
                           'num-executors'                          : numExecutors,
                           'driver-memory'                          : driverMemory,
                           'executor-memory'                        : executorMemory,
                           'conf.spark.yarn.executor.memoryOverhead': executorMemoryOverhead,
                           'conf.spark.driver.maxResultSize'        : maxResultSize,
                           'conf.spark.default.parallelism'         : parallelism,
                           'params'                                 : "--train-input-dirs $trainInputDirs " +
                               "--task-type logistic_regression " + "--validate-input-dirs $validateInputDirs " + "--min-partitions-for-validation $minPartitionsForValidation " +
                               "--output-dir $jobOutputDir " + "--feature-name-and-term-set-path $featureNameAndTermSetInputPath " +
                               "--feature-shard-id-to-feature-section-keys-map $featureShardIdToFeatureSectionKeysMap " +
                               "--num-iterations $numIterations " + "--updating-sequence $updatingSequence " + "--fixed-effect-optimization-configurations $fixedEffectOptimizationConfigurations " +
                               "--fixed-effect-data-configurations $fixedEffectDataConfigurations " + "--random-effect-optimization-configurations $randomEffectOptimizationConfigurations " +
                               "--random-effect-data-configurations $randomEffectDataConfigurations " +
                               "--save-models-to-hdfs false " + "--application-name $applicationName "]
        }
        targets applicationName
      }
    }
  }
}
