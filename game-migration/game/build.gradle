apply plugin: 'li-scala'
apply plugin: 'li-hadoop'
apply plugin: 'li-azkaban2'

apply from: '../build-scripts/avro-code-gen.gradle'

azkabanZip.dependsOn buildAzkabanFlows

apply from: 'src/main/gradle/config/properties.gradle'

//jymbii
apply from: 'src/main/gradle/jymbii/GenerateFeatureList.gradle'
apply from: 'src/main/gradle/jymbii/FullModel.gradle'
apply from: 'src/main/gradle/jymbii/PerJobModel.gradle'
apply from: 'src/main/gradle/jymbii/PerMemberModel.gradle'
apply from: 'src/main/gradle/jymbii/ScaleUpExperiment.gradle'
apply from: 'src/main/gradle/jymbii/SpeedUpExperiment.gradle'


//ads
apply from: 'src/main/gradle/ads/GenerateFeatureList.gradle'
apply from: 'src/main/gradle/ads/FullModel.gradle'


//yahoo-music
apply from: 'src/main/gradle/yahoo-music/GenerateFeatureList.gradle'
apply from: 'src/main/gradle/yahoo-music/FullModel.gradle'
apply from: 'src/main/gradle/yahoo-music/PerMemberModel.gradle'
apply from: 'src/main/gradle/yahoo-music/PerSongModel.gradle'
apply from: 'src/main/gradle/yahoo-music/PerArtistModel.gradle'


//kdd-cup 2012
apply from: 'src/main/gradle/kddcup2012-track2/GenerateData.gradle'
apply from: 'src/main/gradle/kddcup2012-track2/GenerateFeatureList.gradle'
apply from: 'src/main/gradle/kddcup2012-track2/FullModelWithSimplerGlobalAllIds.gradle'
apply from: 'src/main/gradle/kddcup2012-track2/FullModelWithSimplerGlobalAllIdsV2.gradle'
apply from: 'src/main/gradle/kddcup2012-track2/GlobalAndPerAd.gradle'
apply from: 'src/main/gradle/kddcup2012-track2/GlobalAndPerAdvertiser.gradle'
apply from: 'src/main/gradle/kddcup2012-track2/GlobalAndPerDescription.gradle'
apply from: 'src/main/gradle/kddcup2012-track2/GlobalAndPerKeyword.gradle'
apply from: 'src/main/gradle/kddcup2012-track2/GlobalAndPerMember.gradle'
apply from: 'src/main/gradle/kddcup2012-track2/GlobalAndPerQuery.gradle'
apply from: 'src/main/gradle/kddcup2012-track2/GlobalAndPerTitle.gradle'



compileScala {
  scalaCompileOptions.fork = true
  scalaCompileOptions.additionalParameters = [
      "-feature",
      "-language:reflectiveCalls", // used for config structural typing
      "-language:postfixOps"
  ]
}
dependencies {
  compile(spec.external."scalaCompiler$scalaSuffix")
  compile(spec.external."scalaLibrary$scalaSuffix")
  compile(spec.external."scalaReflect$scalaSuffix")
  compile(spec.external.avro)
  compile(spec.external.avroCompiler)
  compile(spec.external.avroMapred)

  compile(spec.external."spark-core$scalaSuffix")
  compile(spec.external."spark-mllib$scalaSuffix") {
    exclude group: 'com.github.fommil.netlib'
  }

  //for time processing
  compile(spec.external."joda")

  //this one is Scala's option parsing library
  compile(spec.external."scopt$scalaSuffix")

  compile(spec.external."log4j")

  compile fileTree(dir: '/Users/xazhang/Downloads', include: 'core-1.1.2.jar')

  // Photon
  compile(spec.product.photon.'photon-ml_2.10') {
    transitive = false
  }

  // jblas for MF
  compile(spec.external."jblas") {
    transitive = false
  }

  // breeze
  compile(spec.external."breeze-core$scalaSuffix") {
    transitive = false
  }
  compile(spec.external."breeze-macro$scalaSuffix") {
    transitive = false
  }
}

configurations {
  // We do not need to pack jars that are available on compute nodes. Version conflicts may cause problems.
  // To use those jars, add /export/apps/hadoop/latest:/export/apps/hadoop/latest/lib:/export/apps/pig/latest/lib to classpath in your jobs.
  azkabanRuntime.exclude group: 'org.apache.hadoop'
  azkabanRuntime.exclude group: 'com.linkedin.li-hadoop'
//  azkabanRuntime.exclude group: 'org.apache.avro'
  azkabanRuntime.exclude group: 'com.twitter'
  azkabanRuntime.exclude group: 'org.apache.spark'
}
